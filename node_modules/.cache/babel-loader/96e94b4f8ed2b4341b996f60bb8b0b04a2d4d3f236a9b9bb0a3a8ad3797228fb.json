{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documentos\\\\GitHub\\\\OBL\\\\src\\\\componentes\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [error, setError] = useState(false);\n  const user = useRef(null);\n  const pass = useRef(null);\n  const ingresar = () => {\n    let campoUser = user.current.value;\n    let campoPass = pass.current.value;\n    if (campoUser === \"a\" && campoPass === \"a\") {\n      localStorage.setItem(\"usuario\", campoUser);\n      navigate(\"/clima\");\n    } else {\n      setError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"txtUser\",\n      children: \"Usuario:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"txtUser\",\n      ref: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 53\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"txtPass\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"txtPass\",\n      ref: pass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 53\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Ingresar\",\n      onClick: ingresar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error en usuario y/o contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 18\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"MmUt2CXwLYyGhbH6xB8k5MKO48w=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useRef","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","error","setError","user","pass","ingresar","campoUser","current","value","campoPass","localStorage","setItem","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Documentos/GitHub/OBL/src/componentes/Login.jsx"],"sourcesContent":["import { useRef, useState } from \"react\"\r\nimport { useNavigate } from \"react-router\";\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const [error, setError] = useState(false);\r\n\r\n    const user = useRef(null);\r\n    const pass = useRef(null)\r\n\r\n    const ingresar = () => {\r\n        let campoUser = user.current.value;\r\n        let campoPass = pass.current.value;\r\n\r\n        if(campoUser === \"a\" && campoPass === \"a\"){\r\n            localStorage.setItem(\"usuario\", campoUser);\r\n            navigate(\"/clima\")\r\n        }else{\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n        <label htmlFor=\"txtUser\">Usuario:</label>\r\n        <input type=\"text\" id=\"txtUser\" ref={user}/><br />\r\n\r\n        <label htmlFor=\"txtPass\">Password:</label>\r\n        <input type=\"text\" id=\"txtPass\" ref={pass}/><br />\r\n\r\n        <input type=\"button\" value=\"Ingresar\" onClick={ingresar}/>\r\n        {error ? <p>Error en usuario y/o contrase√±a</p> : null}\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMS,IAAI,GAAGV,MAAM,CAAC,IAAI,CAAC;EACzB,MAAMW,IAAI,GAAGX,MAAM,CAAC,IAAI,CAAC;EAEzB,MAAMY,QAAQ,GAAGA,CAAA,KAAM;IACnB,IAAIC,SAAS,GAAGH,IAAI,CAACI,OAAO,CAACC,KAAK;IAClC,IAAIC,SAAS,GAAGL,IAAI,CAACG,OAAO,CAACC,KAAK;IAElC,IAAGF,SAAS,KAAK,GAAG,IAAIG,SAAS,KAAK,GAAG,EAAC;MACtCC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEL,SAAS,CAAC;MAC1CN,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC,MAAI;MACDE,QAAQ,CAAC,IAAI,CAAC;IAClB;EACJ,CAAC;EAEH,oBACEL,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBhB,OAAA;MAAOiB,OAAO,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzCrB,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,SAAS;MAACC,GAAG,EAAElB;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAAArB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAElDrB,OAAA;MAAOiB,OAAO,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1CrB,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,SAAS;MAACC,GAAG,EAAEjB;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAAArB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAElDrB,OAAA;MAAOsB,IAAI,EAAC,QAAQ;MAACX,KAAK,EAAC,UAAU;MAACc,OAAO,EAAEjB;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACzDjB,KAAK,gBAAGJ,OAAA;MAAAgB,QAAA,EAAG;IAA+B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAAG,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErD,CAAC;AAEV,CAAC;AAAAnB,EAAA,CAjCKD,KAAK;EAAA,QAEUH,WAAW;AAAA;AAAA4B,EAAA,GAF1BzB,KAAK;AAmCX,eAAeA,KAAK;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}